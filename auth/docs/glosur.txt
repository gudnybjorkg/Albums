* Import
  - Imporata öðrum skrám í eina skrá:
      Header
      Button        ->    Index.js
      CardSection
      Card

      1. Með því að gera index.js skrá undir möppunni sem þessar skrár eru í
        - verður að vera með litlum staf því react-native fer og athugar þar automatískt.
        - skrifa eftirfarandi í index.js fyrir þær skrár sem á exporta.
            export * from './Button';

      2. Fara í skrárnar sem verið er að exporta og í stað þess að gera 'export default Button' þá hafa
            export { Button };
        - má líka vera export { Button : Button }; en þar sem nafnið er það sama þá má stytta það í bara Button

      3. Í þeirri skrá sem ætlar að sækja þessar skrár þá er hægt að gera:
            import {
              Button,
              ...
            } from './Components/Common';

* Firewall
  - online database sem hægt er að tengja beint við appið.
  - firebase.google.com
    - create new project
      - slá inn nafn á projecti og staðsetningu og ok.
    - Dashbord
      - þar undir eru Authentication, database, storage og fleira.
      - add firebase to your web App
    - Velja project namið
      - velja setup sign-in method
      - þar eru allskonar providerar; fb, google ofl. en ekki mikill stuðningur fyrir þessu samt.
      - nota email og passord -> enable -> save
      - Web setup (efst til hægri)
        - gefur upp glugga með kóða sem hægt er að afrita. Þar sem við erum ekki með web based þá er hægt að nýta hluta.
          - afrita config hlutan með innan slaufusviganna.
  - Install firebase
    - npm install --save firebase
    - import firebase from 'fireabse';

* Text input
  - hafa ekki fyrirfram sett height og width, svipað og með Image það þarf því að gera allt styling til að gera það sýnilegt
  - access the text from the user input:
    - með því að nota state með property text
    state = {text: ''};
    <TextInput
      value={this.state.text}                           // gildið sem sést í fieldinu er uppfært miðað við stateið sem er svo hægt að nota miðað við keyið
      onChangeText={text => this.setState({ text })}    // keyrist við það að texti er skrifaður í inputfieldið og breytir stateinu miðað við textann.
      style={{ height: 20, width: 100 }}                // útlit
    />
  - Textinput -> User types text -> onChangeText event called -> setState with new text -> comonent renders
    ekkert í raun gerist við að skrifa text nema því input veit ekkert hvað value-ið sitt er nema honum sé sagt það
    nema með onChangeText kallinu sem uppfærir state-ið. state er því rerenderað og þarf því að uppfæra
    value í inputext svo að það sé með það gildi. þessi cycle heldur svo áfram alltaf þegar textanum er breytt í inputinu.
  - SecureText: Hvernig á að dulbúa texta með *** í stað plaintext
    parsa propinu secureTextEntry={true} í TextInput fieldið. Má líka bara skrifa secureTextEntry því öll boolean gildi koma þá sem true automatiskt
    klasinn sem er að taka við þessu er þá með secureTextEntry={secureTextEntry}

* Flex
  - þegar við erum með children eigindi sem eru siblings þá er hægt að ákvarða hvaða child á að vera í hvaða spacei miðað við parent containerinn.
    það fer eftir hversu mörg children en fyrir hvert flex sem er skilgreint þá leggjast þau saman og tala þess children deilt með fjöldanum væri
    spaceið sem hann fær úthlutað
      t.d. ef það eru 3 children þá væri:
        flex: 1 : 1/4 af containernum
        flex: 2 : 2/4 af containernum
        flex: 1 : 1/4 af containernum
